@using System.Globalization
@using Nexplorer.Domain.Enums
@using Nexplorer.Web.Enums
@using Nexplorer.Web.Extensions
@model AddressViewModel

@{
    ViewBag.Title = $"Address - {Model.Address.Hash}";
    Layout = "_Layout";
}

@section Head {
    <link rel="stylesheet" href="@ViewBag.ControllerCss" />
}

@section Header {
    <div id="hero" class="jumbotron jumbotron-fluid"></div>
    <div id="heroText" class="jumbotron jumbotron-fluid">
        <div class="container-fluid max-width">
            <div id="heroHeader">
                <div class="row row-center-sm">
                    <div class="col-sm-push-10 col-sm-2 text-right-sm">
                        <div ref="identicon" class="identicon-icon">
                            <div class="identicon" v-html="identiconSvg"></div>
                        </div>
                    </div>
                    <div class="col-sm-pull-2 col-sm-10 title">
                        <h1>
                            ADDRESS
                            @if (User.Identity.IsAuthenticated)
                            {
                                <a class="watch-address" href="#" v-on:click.prevent.stop="watchAddress" v-bind:alt="isAddressWatched ? 'Remove from favourites' : 'Add to favourites'">
                                    <span v-bind:class="isAddressWatched ? 'fa fa-star yellow' : 'fa fa-star-o'"></span>
                                </a>
                            }
                        </h1>
                        @if (User.Identity.IsAuthenticated && Model.IsUserFavourite && !string.IsNullOrWhiteSpace(Model.AddressAlias))
                        {
                            <h2 class="title-hash">{{ addressOnShow }}</h2>
                            <a href="#" v-on:click.prevent.stop="flipAddress">{{ addressOnShowLink }}</a>
                        }
                        else
                        {
                            <h2 class="title-hash">@Model.Address.Hash</h2>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-sm-6 col-md-4 order-1">
        <div class="panel">
            <div class="row">
                <div class="col-9">
                    <h2>VALUE</h2>
                </div>
                <div class="col-3 text-right">
                    <span class="fa fa-balance-scale"></span>
                </div>
            </div>
            <h3>Balance</h3>
            <p class="val">@Model.Address.Balance.ToLocaleString() <span style="font-size: 10px;">NXS</span></p>
            <h3>Fiat Value</h3>
            <p class="val">
                <currency-helper :currency-index="'@Model.NxsCurrency.Currency.ToString()'" :currency-value="@Model.NxsCurrency.NXSValue"></currency-helper>
            </p>
            <h3>Bitcoin Value</h3>
            <p class="val">@Model.NxsCurrency.BTCValue.ToLocaleString() <span class="fa fa-btc fa-inline-lg"></span></p>
        </div>
    </div>

    <div class="col-sm-12 col-md-5 order-12 order-md-2">
        <div class="panel">
            <div class="row">
                <div class="col-9">
                    <h2>TRANSACTIONS</h2>
                </div>
                <div class="col-3 text-right">
                    <span class="fa fa-exchange"></span>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6 col-md-4">
                    <h3>Received</h3>
                    <p class="val">@Model.Address.ReceivedCount.ToLocaleString()</p>
                    <h3>Sent</h3>
                    <p class="val">@Model.Address.SentCount.ToLocaleString()</p>
                    <h3>Total</h3>
                    <p class="val">@((Model.Address.ReceivedCount + Model.Address.SentCount).ToLocaleString())</p>
                </div>
                <div class="col-sm-6 col-md-8">
                    <h3>Received</h3>
                    <p class="val">@Model.Address.ReceivedAmount.ToLocaleString() <span style="font-size: 10px;">NXS</span></p>
                    <h3>Sent</h3>
                    <p class="val">@Model.Address.SentAmount.ToLocaleString() <span style="font-size: 10px;">NXS</span></p>
                </div>
            </div>
        </div>
    </div>

    <div class="col-sm-6 col-md-3 order-3">
        <div class="panel no-pad">
            <div class="row add-pad">
                <div class="col-6">
                    <h2>QR</h2>
                </div>
                <div class="col-6 text-right">
                    <span class="fa fa-qrcode"></span>
                </div>
            </div>
            <canvas id="qrCode"></canvas>
        </div>
    </div>
</div>

@{ await Html.RenderPartialAsync("_AdvertBanner"); }

@if (Model.TrustKey != null)
{
    <div class="panel full-length">
        <div class="row d-sm-none">
            <div class="col-9">
                <h2>PROOF OF STAKE</h2>
            </div>
            <div class="col-3 text-right">
                <span class="fa fa-bolt"></span>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-2 d-none d-sm-block">
                <h2>PROOF OF STAKE</h2>
            </div>
            <div class="col-sm-3">
                <h3>Status</h3>
                <p class="val">Currently Staking</p>
            </div>
            <div class="col-sm-2">
                <h3>Genesis Block</h3>
                <p class="val">
                    <a href="/blocks/@Model.TrustKey.GenesisBlockHeight">@Model.TrustKey.GenesisBlockHeight.ToString("N0", CultureInfo.InvariantCulture)</a>
                </p>
            </div>
            <div class="col-sm-2">
                <h3>Interest Rate</h3>
                <p class="val">@Math.Round(Model.TrustKey.InterestRate, 2).ToString("N2", CultureInfo.InvariantCulture) %</p>
            </div>
            <div class="col-sm-2">
                <h3>Last Block</h3>
                <p class="val">@Model.TrustKey.TimeSinceLastBlock.ToString(@"hh\:mm\:ss")</p>
            </div>
            <div class="col-sm-1 text-right d-none d-sm-block">
                <span class="fa fa-bolt"></span>
            </div>
        </div>
    </div>
}

<div class="panel full-length">
    <div class="row">
        <div class="col-8">
            <h2>BALANCE ACTIVITY</h2>
        </div>
        <div class="col-4 text-right">
            <span class="fa fa-line-chart"></span>
        </div>
    </div>
    <activity-chart :address-hash="addressHash" :height="250"></activity-chart>
</div>

<div class="panel">
    <div class="row">
        <div class="col-8">
            <h2>TRANSACTION HISTORY</h2>
        </div>
        <div class="col-4 text-right">
            <span class="fa fa-list-alt"></span>
        </div>
    </div>

    <tx-table id="txTable" ref="txTable" :options="dtOptions" :columns="columns" v-on:row-click="selectTransaction">
        <template #dt-criteria="dt">
            <form id="txFilter" class="offset-sm-4 col-sm-8">
                <div class="form-group">
                    <h3>ORDER BY </h3>
                    <select asp-items="Html.GetEnumSelectList<OrderTransactionsBy>()" v-on:change="dt.dtCriteria.reload(true)" class="form-control" v-model="dt.dtCriteria.criteria.orderBy"></select>
                </div>
                <div class="form-group">
                    <h3>TX TYPE </h3>
                    @{
                        var selectList = new List<SelectListItem> { new SelectListItem("All", null) };
                        selectList.AddRange(Html.GetEnumSelectList<TransactionType>());
                    }

                    <select asp-items="selectList" v-on:change="dt.dtCriteria.reload(true)" class="form-control" v-model="dt.dtCriteria.criteria.txType"></select>
                </div>
                <div class="form-group text-right">
                    <label for="grouped">
                        <input id="grouped" type="checkbox" class="big-checkbox" v-on:change="dt.dtCriteria.reload(true)" v-model="dt.dtCriteria.criteria.grouped" /> Grouped
                    </label>
                </div>
            </form>
        </template>
        <template #dt="slotProps">
            <div class="row dt-row">
                <div class="col-5 col-lg-1 order-1">
                    <span class="d-none d-lg-inline fa fa-calendar-o"></span>
                </div>
                <div class="col-4 col-sm-3 col-lg-1 order-2">
                    <span class="d-none d-lg-inline fa fa-cube"></span>
                </div>
                <div class="col-12 col-lg-7 order-12 order-lg-3 address-hashes">
                    <span class="d-none d-lg-inline fa fa-hashtag"></span>
                </div>
                <div class="col-3 col-sm-1 text-right text-center-sm order-4">
                    <span class="d-none d-lg-inline fa fa-exchange"></span>
                </div>
                <div class="col text-right order-12 order-sm-5">
                    <span class="d-none d-lg-inline fa fa-paper-plane-o"></span>
                </div>
            </div>

            <div v-if="slotProps.dt.tableData.totalItems === 0" class="text-center">
                <hr />
                There are no results
                <hr />
            </div>
            
            <div v-else v-for="(row, i) in slotProps.dt.tableData.pageItems"
                 :class="(i + 1) % 2 === 0 ? 'row dt-row' : 'row dt-row odd-row'"
                 v-on:click.stop.prevent="selectTransaction(row)">

                <div class="col-5 col-lg-1 order-1">
                    {{formatTimestamp(row.timestamp)}}
                </div>
                <div class="col-4 col-sm-3 col-lg-1 order-2">
                    <span class="d-lg-none inline-icon fa fa-cube"></span>
                    <a :href="`/blocks/${row.blockHeight}`">{{row.blockHeight}}</a>
                </div>
                <div class="col-12 col-lg-7 order-12 order-lg-3 address-hashes">
                    <span v-if="row.transactionType === @((int) TransactionType.CoinbaseHash)">Coinbase hash reward</span>
                    <span v-else-if="row.transactionType === @((int) TransactionType.CoinbasePrime)">Coinbase prime reward</span>
                    <span v-else-if="row.transactionType === @((int) TransactionType.Coinstake)">
                        {{`Coinstake ${dtOptions.defaultCriteria.txInputOutputType === null ? 'reward' : 'transaction'}`}}
                    </span>
                    <table v-else class="mt-2 mt-md-0" style="width: 100%;">
                        <tr>
                            <td>
                                <span class="d-lg-none inline-icon fa fa-hashtag"></span>
                            </td>
                            <td>
                                <div class="ml-1 ml-lg-0 read-more">
                                    <collapsable-list :items="row.oppositeItems" :min-items="2">
                                        <template #list="slotProps">
                                            <div class="d-block d-sm-flex" style="width: 100%; justify-content: space-between;">
                                                <a class="d-none d-sm-inline-block" v-on:click.stop="" :href="`/addresses/${slotProps.item.addressHash}`">
                                                    {{slotProps.item.addressHash}}
                                                </a>
                                                <a class="d-block d-sm-none" v-on:click.stop="" :href="`/addresses/${slotProps.item.hash}`">
                                                    {{truncateHash(slotProps.item.addressHash, 30)}}
                                                </a>
                                                <span class="text-right" style="font-size: 0.8rem;">
                                                    ({{slotProps.item.amount.toLocaleString()}} <span style="font-size: 0.6rem;">NXS</span>)
                                                </span>
                                            </div>
                                        </template>
                                    </collapsable-list>
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="col-3 col-sm-1 text-right text-center-sm order-4">
                    <span v-if="row.transactionType === @((int) TransactionType.CoinbaseHash) || row.transactionType === @((int) TransactionType.CoinbasePrime)"
                          class="fa fa-cube mining inline-icon"></span>
                    <span v-else-if="row.transactionType === @((int) TransactionType.Coinstake)"
                          class="fa fa-bolt stake inline-icon"></span>
                    <span v-else :class="row.transactionInputOutputType === @((int) TransactionInputOutputType.Input)
                          ? 'fa fa-arrow-left red inline-icon'
                          : 'fa fa-arrow-right green inline-icon'"></span>
                    @*<span v-if="!row.isStakingReward && !row.isMiningReward && row.transactionInputOutputType === @((int) TransactionInputOutputType.Input)" style="font-size: 12px;">
                        ({{row.transactionInputOutputType.length}})
                    </span>*@
                </div>
                <div class="col text-right order-12 order-sm-5">
                    <strong>
                        {{row.transactionInputOutputType === @((int) TransactionInputOutputType.Input) ? '-' : '+'}}
                        {{parseFloat(row.amount.toFixed(4)).toLocaleString()}}
                    </strong>
                    <small>NXS</small>
                </div>
            </div>
        </template>
    </tx-table>
</div>

@section Modals {
    @*<div class="modal fade" id="editFavouriteModal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Update Favourite</h4>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>
                    <div class="modal-body">
                        <span class="text-danger" v-if="errorMessage">{{ errorMessage }}</span>
                        <div class="form-group">
                            <label>Hash</label>
                            <p>{{ bufferItem.hash ? bufferItem.hash : '' }}</p>
                        </div>
                        <div class="form-group">
                            <label>Alias</label>
                            <input class="form-control" v-model="bufferItem.alias" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <div class="form-group">
                            <button type="button" class="btn btn-default" v-on:click.prevent.stop="updateFavourite">Update</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>*@
}

@section Scripts {
    <script language="javascript" src="@ViewBag.ControllerJs"></script>
    <script language="javascript">
        var vm = new nexplorer.AddressViewModel({
            addressId: @Model.Address.AddressId,
            addressHash: '@Model.Address.Hash',
            addressAlias: '@Model.AddressAlias',
            nxsBalance: @Math.Round(Model.Address.Balance, 2),
            usdValue: @Model.NxsCurrency.NXSValue,
            totalTxCount: @(Model.Address.ReceivedCount + Model.Address.SentCount),
            lastBlockSeenTimestamp: @Json.Serialize(Model.LastBlockSeenTimestamp),
            isAddressWatched: @Json.Serialize(Model.IsUserFavourite),
            txTypes: @Json.Serialize(Enum.GetNames(typeof(TransactionType)))
        });
    </script>
}
