@using System.ComponentModel.DataAnnotations
@using Nexplorer.Domain.Enums
@using Nexplorer.Web.Extensions
@model AddressIndexViewModel

@{
    ViewBag.Title = "Addresses";
    Layout = "_Layout";
}

@section Head {
    <link rel="stylesheet" href="@ViewBag.ControllerCss" />
}

@section Header {
    <div id="hero" class="jumbotron jumbotron-fluid"></div>
    <div id="heroText" class="jumbotron jumbotron-fluid">
        <div class="container-fluid max-width">
            <div id="heroHeader">
                <h1>ADDRESSES</h1>
                <em>
                    Bitcoin private keys are 256 bits in length,<br />
                    Nexus private keys are more than twice as long at 571 bits.
                </em>
            </div>

            <div>
                <swiper>
                    <swiper-slide :slide-title="'Total Addresses'" :slide-val="totalAddresses" :slide-icon="'fa-angle-double-up'"></swiper-slide>
                    <swiper-slide :slide-title="'Average Balance'" :slide-val="averageBalance" :slide-icon="'fa-balance-scale'"></swiper-slide>
                    <swiper-slide :slide-title="'Creation Rate'" :slide-val="newAddressRate" :slide-icon="'fa-plus-circle'"></swiper-slide>
                    <swiper-slide :slide-title="'Staking Count'" :slide-val="amountStaking" :slide-icon="'fa-bolt'"></swiper-slide>
                    <swiper-slide :slide-title="'Staked Coins'" :slide-val="totalStakedCoins" :slide-icon="'fa-bolt'"></swiper-slide>
                    <swiper-slide :slide-title="'With 1000+ NXS'" :slide-val="stakeablePercentage" :slide-icon="'fa-money'"></swiper-slide>
                    <swiper-slide :slide-title="'Dormant 1+ Years'" :slide-val="percentageDormant" :slide-icon="'fa-bed'"></swiper-slide>
                    <swiper-slide :slide-title="'Zero Balance'" :slide-val="zeroBalance" :slide-icon="'fa-ban'"></swiper-slide>
                </swiper>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-sm-6">
        <div class="panel">
            <div class="row">
                <div class="col-xs-9">
                    <h2>COIN DISTRIBUTION</h2>
                </div>
                <div class="col-xs-3 text-right">
                    <span class="fa fa-signal"></span>
                </div>
            </div>
            <h3 style="margin-left: 8px;">Balance</h3>
            <nxs-distribution-chart :chart-data="nxsDistributionChartData" :options="distributionChartOptions" :width="350" :height="250"></nxs-distribution-chart>
            <small class="text-muted" style="display: block;">
                The percentage of coin distributed within the balance bands.
            </small>
        </div>
    </div>

    <div class="col-sm-6">
        <div class="panel">
            <div class="row">
                <div class="col-xs-9">
                    <h2>ADDRESS DISTRIBUTION</h2>
                </div>
                <div class="col-xs-3 text-right">
                    <span class="fa fa-signal"></span>
                </div>
            </div>
            <h3 style="margin-left: 8px;">Balance</h3>
            <address-distribution-chart :chart-data="addressDistributionChartData" :options="distributionChartOptions" :width="350" :height="250"></address-distribution-chart>
            <small class="text-muted" style="display: block;">
                The percentage of addresses within the balance bands.
            </small>
        </div>
    </div>
</div>

@{ await Html.RenderPartialAsync("_AdvertBanner"); }

<div class="panel full-length">
    <div class="row">
        <div class="col-xs-8">
            <h2>OVERALL DISTRIBUTION</h2>
        </div>
        <div class="col-xs-4 text-right">
            <span class="fa fa-list-ol"></span>
        </div>
    </div>
    <table id="distributionTable" class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Balance</th>
                <th scope="col">#Addresses</th>
                <th class="hidden-xs" scope="col">% Addresses (Total)</th>
                <th scope="col">#Coins</th>
                <th class="hidden-xs" scope="col">% Coins (Total)</th>
            </tr>
        </thead>
        @foreach (var dto in Model.AddressDistrubtion)
        {
            <tr>
                <td><strong>@(((AddressBalanceDistributionBands)dto.DistributionBand).GetAttribute<DisplayAttribute>().Name)</strong></td>
                <td>@dto.AddressCount.ToString("N0")</td>
                <td class="hidden-xs">@dto.AddressPercent.ToString("N") %</td>
                <td>@dto.CoinBalance.ToString("N")</td>
                <td class="hidden-xs">@dto.CoinPercent.ToString("N") %</td>
            </tr>
        }
    </table>
</div>

<div class="panel full-length">
    <div class="row">
        <div class="col-xs-8">
            <h2>FILTER ADDRESSES</h2>
        </div>
        <div class="col-xs-4 text-right">
            <span class="fa fa-filter"></span>
        </div>
    </div>

    <div class="text-toggle">
        <a href="#" v-on:click.prevent.stop="changeFilter('all')" v-bind:class="currentFilter == 'all' ? 'active-link' : ''">All</a>
        <span class="toggle-seperator fa fa-ellipsis-v"></span>
        <a href="#" v-on:click.prevent.stop="changeFilter('recent')" v-bind:class="currentFilter == 'recent' ? 'active-link' : ''">Recent</a>
        <span class="toggle-seperator fa fa-ellipsis-v"></span>
        <a href="#" v-on:click.prevent.stop="changeFilter('staking')" v-bind:class="currentFilter == 'staking' ? 'active-link' : ''">Staking</a>
        <span class="toggle-seperator fa fa-ellipsis-v"></span>
        <a href="#" v-on:click.prevent.stop="changeFilter('nexus')" v-bind:class="currentFilter == 'nexus' ? 'active-link' : ''">Nexus</a>
        <span class="toggle-seperator fa fa-ellipsis-v"></span>
        <a href="#" v-on:click.prevent.stop="changeFilter('custom')" v-bind:class="currentFilter == 'custom' ? 'active-link' : ''">Custom</a>
    </div>

    <div class="row">
        <div class="col-md-offset-1 col-md-10">
            <div id="customFilter" v-if="currentFilter == 'custom'">
                <form id="customFilterForm">
                    <div class="row">
                        <div class="col-sm-4">
                            <h3>BALANCE</h3>
                            <br />
                            <div class="form-group">
                                <label for="balanceMin">Min Balance</label>
                                <input type="number" class="form-control" id="balanceMin" v-model="filterCriteria.minBalance">
                            </div>
                            <div class="form-group">
                                <label for="balanceMax">Max Balance</label>
                                <input type="number" class="form-control" id="balanceMax" v-model="filterCriteria.maxBalance">
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <h3>LAST BLOCK</h3>
                            <br />
                            <div class="form-group">
                                <label for="lastSeenFrom">Min Height</label>
                                <input type="number" class="form-control" id="lastSeenFrom" v-model="filterCriteria.heightFrom">
                            </div>
                            <div class="form-group">
                                <label for="lastSeenTo">Max Height</label>
                                <input type="number" class="form-control" id="lastSeenTo" v-model="filterCriteria.heightTo">
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <h3>ORDER BY</h3>
                            <br />
                            <div class="form-group">
                                <select asp-items="Html.GetEnumSelectList<OrderAddressesBy>()" class="form-control" v-model="filterCriteria.orderBy"></select>
                            </div>
                            <br />
                            <h3>OPTIONS</h3>
                            <br />
                            <div class="form-group">
                                <label for="isStaking" style="margin-top: 7px;">
                                    <input class="big-checkbox" type="checkbox" value="" id="isStaking" v-model="filterCriteria.isStaking">
                                    Only Staking
                                </label>
                            </div>
                            <div class="form-group">
                                <label for="isNexus" style="margin-top: 7px;">
                                    <input class="big-checkbox" type="checkbox" value="" id="isNexus" v-model="filterCriteria.isNexus">
                                    Only Nexus
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <small class="text-muted" style="display: block;">
                                All fields are optional, 1000 results maximum.
                            </small>
                            <br />
                            <button type="submit" class="btn btn-primary" v-on:click.prevent.stop="reloadData">GO</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <address-table ref="addressTable" class="address-table"
                   :ajax-url="addressTableAjaxUrl"
                   :columns="addressTableColumns"></address-table>
</div>

@section Scripts {
    <script language="javascript" src="@ViewBag.ControllerJs"></script>
    <script language="javascript">
        var vm = new nexplorer.AddressIndexViewModel({
            distributionBands: @Json.Serialize((Enum.GetValues(typeof(AddressBalanceDistributionBands))
                                     .Cast<AddressBalanceDistributionBands>()
                                     .Select(x => x.GetAttribute<DisplayAttribute>().Name))),
            distributionBandData: @Json.Serialize(Model.AddressDistrubtion)
        });
    </script>
}
